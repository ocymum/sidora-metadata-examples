<?xml version="1.0" encoding="UTF-8"?>
<StudyUnit xmlns="ddi:studyunit:3_1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:dc-elements="http://purl.org/dc/elements/1.1/" xmlns:r="ddi:reusable:3_1"
    xsi:schemaLocation="ddi:studyunit:3_1
    file:/Users/ajs6f/Documents/sidora/metadata_report/DDI_3_1_2009-10-18_Documentation_XMLSchema/XMLSchema/instance.xsd"
    id="see-note-1">

    <r:Citation>
        <r:Title>Example in pure DDI XML</r:Title>
        <!-- Unfortunately, while DDI enables integration at this level with DC Elements, it does not engage with the
            more modern and useful DC Terms. Instead, it offers its own set of descriptive elements. -->
        <r:Creator>Beth</r:Creator>
        <r:PublicationDate>
            <r:SimpleDate>2014-10-31</r:SimpleDate>
        </r:PublicationDate>
        <DCElements xmlns="ddi:dcelements:3_1">
            <dc-elements:creator>Beth</dc-elements:creator>
            <dc-elements:description>Some data</dc-elements:description>
        </DCElements>
    </r:Citation>
    <Abstract id="">
        <r:Content>
            Here is a discussion of the interesting nature of this dataset.
        </r:Content>
    </Abstract>
    <r:UniverseReference>
        <!-- The definition of this element includes: "Reference to the description of the persons or other elements that
            are the object of the research and to which any analytic results refer."
            This is the kind of difficulty presented by working with a really full and complete model that is
            unfortunately using the closed-world assumption.
        -->
        <r:ID/>
    </r:UniverseReference>
    <Purpose id="">
        <!-- The definition of this element includes: "The purpose of the study, in human-readable form. This should
            include detailed information on the investigator's primary study questions or hypotheses as well as
            information on any legal basis for the data collection, such as laws requiring the collection of census
            data for apportionment purposes." It seems unlikely to me that we will recover this kind of information from
            researchers as a rule.-->
        <r:Content/>
    </Purpose>

    <LogicalProduct xmlns="ddi:logicalproduct:3_1" id="see-note-1">

        <!-- Note 1: A weakness of DDI appears immediately below. CodeScheme is a "maintainable" object, which implies
            that its id must be unique _within_ the maintaining agency. In this case, because SIDora is an institutional
        repository, that seems to be SI itself, which implies that each and every code scheme (controlled voabculary)
        used by any dataset will have to have an identifier unique across the entire range of datasets in SIDora. This
        could be accomplished with by using UUIDs or the like, but it points to the tendency of DDI to suppose that more
        curation of data artifacts is going to occur earlier than may actually be the case. -->
        <CodeScheme id="simpleCodeScheme">
            <Code>
                <!-- The below element is required and will appear over and over. It enables a connection between a code
                value and a system of defined categories for data values, a connection we have no desire (or probably
                ability) to make. -->
                <CategoryReference lateBound="true">
                    <r:ID>DDI-cruft</r:ID>
                </CategoryReference>
                <Value>Blue</Value>
            </Code>
            <Code>
                <CategoryReference lateBound="true">
                    <r:ID>DDI-cruft</r:ID>
                </CategoryReference>
                <Value>Red</Value>
            </Code>
            <Code>
                <CategoryReference lateBound="true">
                    <r:ID>DDI-cruft</r:ID>
                </CategoryReference>
                <Value>Green</Value>
            </Code>
        </CodeScheme>
        <VariableScheme id="">

            <Variable id="var1">
                <r:Label>variable one</r:Label>
                <r:Description>variable one description</r:Description>
                <Representation>
                    <NumericRepresentation type="Double">
                        <r:NumberRange>
                            <r:Low>0</r:Low>
                            <r:High>50</r:High>
                        </r:NumberRange>
                    </NumericRepresentation>
                </Representation>
            </Variable>

            <Variable id="var2">
                <r:Label>variable two</r:Label>
                <r:Description>variable two description</r:Description>
                <Representation>
                    <TextRepresentation/>
                </Representation>
            </Variable>

            <Variable id="var3">
                <r:Label>variable three</r:Label>
                <r:Description>variable three description</r:Description>
                <Representation>
                    <NumericRepresentation type="Integer">
                        <r:NumberRange>
                            <r:Low>10</r:Low>
                            <r:High>20</r:High>
                        </r:NumberRange>
                    </NumericRepresentation>
                </Representation>
            </Variable>

            <Variable id="var4">
                <r:Label>variable four</r:Label>
                <r:Description>variable four description</r:Description>
                <Representation>
                    <!-- DDI offers several kinds of "date-time", which map onto XML Schema data types. Unfortunately, it
                    may not always be obvious which to pick. -->
                    <DateTimeRepresentation type="Date"/>
                </Representation>
            </Variable>

            <Variable id="var5">
                <r:Label>variable five</r:Label>
                <r:Description>variable five description</r:Description>
                <Representation>
                    <CodeRepresentation>
                        <!-- Notice the way in which a code scheme must be available as a reference. I have not been able to
                    find any way in which a code scheme can be offered in the simple, in-line manner. -->
                        <r:CodeSchemeReference>
                            <r:ID>simpleCodeScheme</r:ID>
                        </r:CodeSchemeReference>
                    </CodeRepresentation>
                </Representation>
            </Variable>
        </VariableScheme>


    </LogicalProduct>

</StudyUnit>